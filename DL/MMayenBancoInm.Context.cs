//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MMayenBancoInmobiliarioEntities : DbContext
    {
        public MMayenBancoInmobiliarioEntities()
            : base("name=MMayenBancoInmobiliarioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Amortizacion> Amortizacions { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Credito> Creditoes { get; set; }
    
        public virtual int ClienteAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string fechaNacimiento, Nullable<int> numeroCredito, Nullable<decimal> importeCredito, Nullable<int> plazo, Nullable<decimal> tasaAnual, Nullable<decimal> pagoMensual, Nullable<decimal> capitalAmortizado, Nullable<decimal> interesPeriodo, Nullable<decimal> saldoInsoluto, string rFC)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var numeroCreditoParameter = numeroCredito.HasValue ?
                new ObjectParameter("NumeroCredito", numeroCredito) :
                new ObjectParameter("NumeroCredito", typeof(int));
    
            var importeCreditoParameter = importeCredito.HasValue ?
                new ObjectParameter("ImporteCredito", importeCredito) :
                new ObjectParameter("ImporteCredito", typeof(decimal));
    
            var plazoParameter = plazo.HasValue ?
                new ObjectParameter("Plazo", plazo) :
                new ObjectParameter("Plazo", typeof(int));
    
            var tasaAnualParameter = tasaAnual.HasValue ?
                new ObjectParameter("TasaAnual", tasaAnual) :
                new ObjectParameter("TasaAnual", typeof(decimal));
    
            var pagoMensualParameter = pagoMensual.HasValue ?
                new ObjectParameter("PagoMensual", pagoMensual) :
                new ObjectParameter("PagoMensual", typeof(decimal));
    
            var capitalAmortizadoParameter = capitalAmortizado.HasValue ?
                new ObjectParameter("CapitalAmortizado", capitalAmortizado) :
                new ObjectParameter("CapitalAmortizado", typeof(decimal));
    
            var interesPeriodoParameter = interesPeriodo.HasValue ?
                new ObjectParameter("InteresPeriodo", interesPeriodo) :
                new ObjectParameter("InteresPeriodo", typeof(decimal));
    
            var saldoInsolutoParameter = saldoInsoluto.HasValue ?
                new ObjectParameter("SaldoInsoluto", saldoInsoluto) :
                new ObjectParameter("SaldoInsoluto", typeof(decimal));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter, numeroCreditoParameter, importeCreditoParameter, plazoParameter, tasaAnualParameter, pagoMensualParameter, capitalAmortizadoParameter, interesPeriodoParameter, saldoInsolutoParameter, rFCParameter);
        }
    
        public virtual int ClienteDelete(Nullable<int> numeroCliente, Nullable<int> numeroCredito)
        {
            var numeroClienteParameter = numeroCliente.HasValue ?
                new ObjectParameter("NumeroCliente", numeroCliente) :
                new ObjectParameter("NumeroCliente", typeof(int));
    
            var numeroCreditoParameter = numeroCredito.HasValue ?
                new ObjectParameter("NumeroCredito", numeroCredito) :
                new ObjectParameter("NumeroCredito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteDelete", numeroClienteParameter, numeroCreditoParameter);
        }
    
        public virtual ObjectResult<ClienteGetById_Result> ClienteGetById(Nullable<int> numeroCredito)
        {
            var numeroCreditoParameter = numeroCredito.HasValue ?
                new ObjectParameter("NumeroCredito", numeroCredito) :
                new ObjectParameter("NumeroCredito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetById_Result>("ClienteGetById", numeroCreditoParameter);
        }
    
        public virtual ObjectResult<ClienteGetAll_Result> ClienteGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetAll_Result>("ClienteGetAll");
        }
    }
}
